{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x5752ff8A7F738dAe2D4Ba81305b73Fa422F52321",
      "txHash": "0xccab47500be2e0dd7b31fe3be81a14481f46c63a59fefb1e295c761dcff31a3e",
      "kind": "transparent"
    },
    {
      "address": "0x47b6C61FE01de51507C6E68DA7a8B35bC64eed78",
      "txHash": "0x5e21980bebe1e064326deceb731c8e5629735b89ce6940dfd7acfd01c0630269",
      "kind": "transparent"
    },
    {
      "address": "0x18aC23e0E646bdd7881813BDBEC31324B3bA5667",
      "txHash": "0x776d868bc89bcc61b2863225d78daae03afd64c0f2e33f7c8b276fce3eb6c487",
      "kind": "transparent"
    }
  ],
  "impls": {
    "4fba771d7d28cc7b8af588337628beb62063b24924563410593736b3514d447f": {
      "address": "0xc0F9ef00B4B3aCF1Fe3A61b91a9C3F84d3fcE67D",
      "txHash": "0x1b94ab1367ec20d2de094f23cb99ff2f81cf40309814f8c295fce859ecc8d7c8",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "101",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:25"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "102",
            "type": "t_string_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:28"
          },
          {
            "label": "_owners",
            "offset": 0,
            "slot": "103",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:31"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "104",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34"
          },
          {
            "label": "_tokenApprovals",
            "offset": 0,
            "slot": "105",
            "type": "t_mapping(t_uint256,t_address)",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:37"
          },
          {
            "label": "_operatorApprovals",
            "offset": 0,
            "slot": "106",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:40"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "107",
            "type": "t_array(t_uint256)44_storage",
            "contract": "ERC721Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:477"
          },
          {
            "label": "_hashedName",
            "offset": 0,
            "slot": "151",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:40",
            "renamedFrom": "_HASHED_NAME"
          },
          {
            "label": "_hashedVersion",
            "offset": 0,
            "slot": "152",
            "type": "t_bytes32",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:42",
            "renamedFrom": "_HASHED_VERSION"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "153",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:44"
          },
          {
            "label": "_version",
            "offset": 0,
            "slot": "154",
            "type": "t_string_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:45"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "155",
            "type": "t_array(t_uint256)48_storage",
            "contract": "EIP712Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol:204"
          },
          {
            "label": "_delegation",
            "offset": 0,
            "slot": "203",
            "type": "t_mapping(t_address,t_address)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:39"
          },
          {
            "label": "_delegateCheckpoints",
            "offset": 0,
            "slot": "204",
            "type": "t_mapping(t_address,t_struct(Trace224)3827_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:42",
            "retypedFrom": "mapping(address => Checkpoints.History)"
          },
          {
            "label": "_totalCheckpoints",
            "offset": 0,
            "slot": "205",
            "type": "t_struct(Trace224)3827_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:45",
            "retypedFrom": "Checkpoints.History"
          },
          {
            "label": "_nonces",
            "offset": 0,
            "slot": "206",
            "type": "t_mapping(t_address,t_struct(Counter)4884_storage)",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "207",
            "type": "t_array(t_uint256)46_storage",
            "contract": "VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/governance/utils/VotesUpgradeable.sol:256"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "253",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC721VotesUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721VotesUpgradeable.sol:55"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "303",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:17"
          },
          {
            "label": "_ownedTokensIndex",
            "offset": 0,
            "slot": "304",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:20"
          },
          {
            "label": "_allTokens",
            "offset": 0,
            "slot": "305",
            "type": "t_array(t_uint256)dyn_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:23"
          },
          {
            "label": "_allTokensIndex",
            "offset": 0,
            "slot": "306",
            "type": "t_mapping(t_uint256,t_uint256)",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:26"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "307",
            "type": "t_array(t_uint256)46_storage",
            "contract": "ERC721EnumerableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC721/extensions/ERC721EnumerableUpgradeable.sol:171"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "353",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)23_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "354",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "403",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "404",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "flothContract",
            "offset": 0,
            "slot": "453",
            "type": "t_contract(IFloth)16769",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:23"
          },
          {
            "label": "withdrawAddress",
            "offset": 0,
            "slot": "454",
            "type": "t_address_payable",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:26"
          },
          {
            "label": "flothVault",
            "offset": 0,
            "slot": "455",
            "type": "t_address",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:29"
          },
          {
            "label": "_currentBaseURI",
            "offset": 0,
            "slot": "456",
            "type": "t_string_storage",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:32"
          },
          {
            "label": "price",
            "offset": 0,
            "slot": "457",
            "type": "t_uint256",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:35"
          },
          {
            "label": "priceIncrement",
            "offset": 0,
            "slot": "458",
            "type": "t_uint256",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:38"
          },
          {
            "label": "_ownedTokens",
            "offset": 0,
            "slot": "459",
            "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:41"
          },
          {
            "label": "numberMinted",
            "offset": 0,
            "slot": "460",
            "type": "t_uint16",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:44"
          },
          {
            "label": "mintsSinceLastIncrement",
            "offset": 2,
            "slot": "460",
            "type": "t_uint16",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:47"
          },
          {
            "label": "maxSupply",
            "offset": 4,
            "slot": "460",
            "type": "t_uint16",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:50"
          },
          {
            "label": "saleActive",
            "offset": 6,
            "slot": "460",
            "type": "t_bool",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:53"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "461",
            "type": "t_string_storage",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:56"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "462",
            "type": "t_string_storage",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:57"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "463",
            "type": "t_array(t_uint256)50_storage",
            "contract": "FlothPass",
            "src": "contracts/FlothPass.sol:64"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(Checkpoint224)3832_storage)dyn_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]",
            "numberOfBytes": "1408"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]",
            "numberOfBytes": "1472"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IFloth)16769": {
            "label": "contract IFloth",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_address)": {
            "label": "mapping(address => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
            "label": "mapping(address => uint256[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Counter)4884_storage)": {
            "label": "mapping(address => struct CountersUpgradeable.Counter)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(Trace224)3827_storage)": {
            "label": "mapping(address => struct CheckpointsUpgradeable.Trace224)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)23_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(Checkpoint224)3832_storage": {
            "label": "struct CheckpointsUpgradeable.Checkpoint224",
            "members": [
              {
                "label": "_key",
                "type": "t_uint32",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_value",
                "type": "t_uint224",
                "offset": 4,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(Counter)4884_storage": {
            "label": "struct CountersUpgradeable.Counter",
            "members": [
              {
                "label": "_value",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)23_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(Trace224)3827_storage": {
            "label": "struct CheckpointsUpgradeable.Trace224",
            "members": [
              {
                "label": "_checkpoints",
                "type": "t_array(t_struct(Checkpoint224)3832_storage)dyn_storage",
                "offset": 0,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint224": {
            "label": "uint224",
            "numberOfBytes": "28"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint32": {
            "label": "uint32",
            "numberOfBytes": "4"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
